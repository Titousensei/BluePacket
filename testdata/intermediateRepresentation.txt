DemoPacket {DemoPacket/C F=[N=fBoolean T=bool, N=fByte T=byte, N=fShort T=short, N=fInt T=int, N=fLong T=long, N=fFloat T=float, N=fDouble T=double, N=fString T=string, N=fLongstring T=string, N=xPacket T=packet, N=emptyPacket T=packet, N=fInner T=MyInner D=['Inner field with just one int doc:fInner'], N=aInner T=MyInner list, D=['External class and enum, show in code comment'], N=fOuter T=DemoOuter, N=aOuter T=DemoOuter list, N=fEnum T=MyEnum D=['Enum test labels doc:fEnum', 'Multi-line inner doc:fEnum'], N=oEnum T=DemoEnum] C[{MyInner/C F=[N=iInteger T=int D=['field comment inner class']] C[] E[] D['Docstring for inner class doc:MyInner']}] E[{MyEnum/E F=[N=DUNNO, N=MAYBE, N=POSSIBLE, N=WHOKNOWS, D=['Another local comment', 'Will not show in code']] D[]}] D['This is a docstring for this packet doc:DemoPacket', 'Multi-line, for doc:DemoPacket']}
DemoEnum {DemoEnum/E F=[D=['local shown as code comment'], N=YES, N=SURE, N=ABSOLUTELY, N=NO_DOUBT D=['enum label doc:NO_DOUBT']] D['Enum also have docstring doc:DemoEnum']}
DemoOuter {DemoOuter/C F=[N=oInt T=int, N=oString T=string, D=['last line show as code comment']] C[] E[] D[]}
BinaryTreeNode {BinaryTreeNode/C F=[N=data T=string, N=left T=BinaryTreeNode, N=right T=BinaryTreeNode] C[] E[] D['node doc:BinaryTreeNode']}
DemoPacket2 {DemoPacket2/C F=[N=aBoolean T=bool list, N=aByte T=byte list, N=aShort T=short list, N=aInt T=int list, N=aLong T=long list, N=aFloat T=float list, N=aDouble T=double list, N=aString T=string list, N=aZero T=int list, N=aEmpty T=string list, N=aNull T=DemoOuter list, N=largeEnum1 T=DemoEnum260, N=largeEnum2 T=DemoEnum260, N=aLargeEnum T=DemoEnum260 list] C[] E[] D[]}
DemoPacket3 {DemoPacket3/C F=[N=possible T=DemoEnum list] C[] E[] D[]}
DemoUnsigned {DemoUnsigned/C F=[N=ub T=ubyte, N=us T=ushort, N=lub T=ubyte list, N=lus T=ushort list, N=a0 T=bool, N=a1 T=bool, N=a2 T=bool, N=a3 T=bool, N=a4 T=bool, N=a5 T=bool, N=a6 T=bool, N=a7 T=bool, N=b0 T=bool, N=b1 T=bool, N=b2 T=bool, N=b3 T=bool, N=b4 T=bool, N=b5 T=bool, N=b6 T=bool, N=b7 T=bool, N=c0 T=bool, N=c1 T=bool, N=c2 T=bool] C[] E[] D[]}
DemoEnum260 {DemoEnum260/E F=[N=a0, N=a1, N=a2, N=a3, N=a4, N=a5, N=a6, N=a7, N=a8, N=a9, , N=b0, N=b1, N=b2, N=b3, N=b4, N=b5, N=b6, N=b7, N=b8, N=b9, N=c0, N=c1, N=c2, N=c3, N=c4, N=c5, N=c6, N=c7, N=c8, N=c9, N=d0, N=d1, N=d2, N=d3, N=d4, N=d5, N=d6, N=d7, N=d8, N=d9, N=e0, N=e1, N=e2, N=e3, N=e4, N=e5, N=e6, N=e7, N=e8, N=e9, N=f0, N=f1, N=f2, N=f3, N=f4, N=f5, N=f6, N=f7, N=f8, N=f9, N=g0, N=g1, N=g2, N=g3, N=g4, N=g5, N=g6, N=g7, N=g8, N=g9, N=h0, N=h1, N=h2, N=h3, N=h4, N=h5, N=h6, N=h7, N=h8, N=h9, N=i0, N=i1, N=i2, N=i3, N=i4, N=i5, N=i6, N=i7, N=i8, N=i9, N=j0, N=j1, N=j2, N=j3, N=j4, N=j5, N=j6, N=j7, N=j8, N=j9, N=k0, N=k1, N=k2, N=k3, N=k4, N=k5, N=k6, N=k7, N=k8, N=k9, N=l0, N=l1, N=l2, N=l3, N=l4, N=l5, N=l6, N=l7, N=l8, N=l9, N=m0, N=m1, N=m2, N=m3, N=m4, N=m5, N=m6, N=m7, N=m8, N=m9, N=n0, N=n1, N=n2, N=n3, N=n4, N=n5, N=n6, N=n7, N=n8, N=n9, N=o0, N=o1, N=o2, N=o3, N=o4, N=o5, N=o6, N=o7, N=o8, N=o9, N=p0, N=p1, N=p2, N=p3, N=p4, N=p5, N=p6, N=p7, N=p8, N=p9, N=q0, N=q1, N=q2, N=q3, N=q4, N=q5, N=q6, N=q7, N=q8, N=q9, N=r0, N=r1, N=r2, N=r3, N=r4, N=r5, N=r6, N=r7, N=r8, N=r9, N=s0, N=s1, N=s2, N=s3, N=s4, N=s5, N=s6, N=s7, N=s8, N=s9, N=t0, N=t1, N=t2, N=t3, N=t4, N=t5, N=t6, N=t7, N=t8, N=t9, N=u0, N=u1, N=u2, N=u3, N=u4, N=u5, N=u6, N=u7, N=u8, N=u9, N=v0, N=v1, N=v2, N=v3, N=v4, N=v5, N=v6, N=v7, N=v8, N=v9, N=w0, N=w1, N=w2, N=w3, N=w4, N=w5, N=w6, N=w7, N=w8, N=w9, N=x0, N=x1, N=x2, N=x3, N=x4, N=x5, N=x6, N=x7, N=x8, N=x9, N=y0, N=y1, N=y2, N=y3, N=y4, N=y5, N=y6, N=y7, N=y8, N=y9, N=z0, N=z1, N=z2, N=z3, N=z4, N=z5, N=z6, N=z7, N=z8, N=z9] D[]}
DemoVersion {DemoVersion/C F=[N=major T=int, N=minor T=int, N=patch T=int] C[] E[] D[]}
DemoVersion__3FC7F86674610139 {DemoVersion/C F=[N=version T=int] C[] E[] D[]}
DemoIncludeVersion {DemoIncludeVersion/C F=[N=version T=DemoVersion] C[] E[] D[]}
DemoIncludeVersion__3D76B02436B66199 {DemoIncludeVersion/C F=[N=version T=DemoVersion__3FC7F86674610139] C[] E[] D[]}
DemoPacket0 {DemoPacket0/C F=[] C[] E[] D[]}
DemoAbstract1 {DemoAbstract1/A D[]}
DemoAbstract2 {DemoAbstract2/A D['Abstract also have docstring doc:DemoAbstract2']}
DemoPacketAbs1 {DemoPacketAbs1/C A[DemoAbstract1] F=[] C[] E[] D[]}
DemoPacketAbs2 {DemoPacketAbs2/C A[DemoAbstract2] F=[] C[] E[] D[]}
DemoPacketAbs12 {DemoPacketAbs12/C A[DemoAbstract1, DemoAbstract2] F=[] C[] E[] D[]}
